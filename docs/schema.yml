openapi: 3.0.3
info:
  title: Development tracker API
  version: 1.0.0
  description: Документация для проекта Трекер развития
  contact:
    email: admin@admin.com
  license:
    name: BSD License
paths:
  /api/v1/auth/token/login/:
    post:
      operationId: api_v1_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/v1/auth/token/logout/:
    post:
      operationId: api_v1_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/schema/:
    get:
      operationId: api_v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/tracker/:
    get:
      operationId: api_v1_tracker_list
      description: Выводит параметры профиля пользователя.
      summary: Список навыков
      tags:
      - Tracker
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLevel'
          description: ''
  /api/v1/tracker/{id}/:
    get:
      operationId: api_v1_tracker_retrieve
      description: Позволяет отобразить список навыков для пользователя трека
      summary: Навыки конкретного пользователя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Направление пользователя.
        required: true
      tags:
      - Tracker
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLevel'
          description: ''
    patch:
      operationId: api_v1_tracker_partial_update
      description: 'Позваляет отредактировать параметры: профессия и грейт.'
      summary: Редактирование парамеров пользователя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Направление пользователя.
        required: true
      tags:
      - Tracker
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserLevel'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLevel'
          description: ''
  /api/v1/tracker/{user_id}/recommendations/:
    get:
      operationId: api_v1_tracker_recommendations_list
      description: Выводит список рекомендаций для пользователя трека.
      summary: Список рекомендаций для пользователя.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - Tracker
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCourse'
          description: ''
  /api/v1/tracker/{user_id}/recommendations/{id}/:
    get:
      operationId: api_v1_tracker_recommendations_retrieve
      description: Позволяет отобразить список навыков для конкретного пользователя
        трека.
      summary: Рекомендованный навык конкретного пользователя.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Рекомендация.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - Tracker
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLevel'
          description: ''
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_v1_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: api_v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/activation/:
    post:
      operationId: api_v1_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v1/users/me/:
    get:
      operationId: api_v1_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/resend_activation/:
    post:
      operationId: api_v1_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/users/reset_email/:
    post:
      operationId: api_v1_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/users/reset_email_confirm/:
    post:
      operationId: api_v1_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v1/users/reset_password/:
    post:
      operationId: api_v1_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/users/reset_password_confirm/:
    post:
      operationId: api_v1_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/users/set_email/:
    post:
      operationId: api_v1_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v1/users/set_password/:
    post:
      operationId: api_v1_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Course:
      type: object
      description: Сериализатор курсов в рекомендациях.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 200
        description:
          type: string
          title: Описание
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,11}(?:\.\d{0,2})?$
          title: Стоимость
        modul_id:
          type: array
          items:
            $ref: '#/components/schemas/Modul'
        level_id:
          $ref: '#/components/schemas/Level'
      required:
      - description
      - id
      - level_id
      - modul_id
      - price
      - title
    CustomUser:
      type: object
      description: Кастомный сериализатор для User на чтение.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
      required:
      - email
      - id
      - username
    Level:
      type: object
      description: Сериализатор уровня профессии после окончания курса.
      properties:
        profession:
          type: string
          title: Профессия
          maxLength: 200
        level:
          type: string
          title: Грейт
          maxLength: 200
      required:
      - level
      - profession
    Links:
      type: object
      description: Сериализатор ссылок в рекомендациях.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 200
        url:
          type: string
          format: uri
          title: Ссылка
          maxLength: 200
        level_id:
          $ref: '#/components/schemas/Level'
      required:
      - id
      - level_id
      - title
      - url
    Modul:
      type: object
      description: Сериализатор модулей в рекомендациях.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,11}(?:\.\d{0,2})?$
          title: Стоимость
        length:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          title: Время обучения в часах
        theme_id:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
      required:
      - id
      - length
      - price
      - theme_id
      - title
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Адрес электронной почты
    PatchedUserLevel:
      type: object
      description: Сериализатор направления пользователя в трекере.
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        level_id:
          $ref: '#/components/schemas/Level'
        skill_id:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
          readOnly: true
        goal:
          type: boolean
          title: Цель
        value:
          type: string
          readOnly: true
    Pract:
      type: object
      description: Сериализатор практики в рекомендациях.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 200
        url:
          type: string
          format: uri
          title: Ссылка
          maxLength: 200
        level_id:
          $ref: '#/components/schemas/Level'
      required:
      - id
      - level_id
      - title
      - url
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
      required:
      - current_password
      - new_email
    Skill:
      type: object
      description: Сериализатор навыков в трекере.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Навык
          maxLength: 200
        description:
          type: string
          title: Описание навыка
        skill_percent:
          type: integer
          maximum: 100
          minimum: 0
          title: Процент навыка
      required:
      - description
      - id
      - name
      - skill_percent
    Theme:
      type: object
      description: Сериализатор тем в рекомендациях.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,11}(?:\.\d{0,2})?$
          title: Стоимость
      required:
      - id
      - price
      - title
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Адрес электронной почты
      required:
      - email
      - id
      - username
    UserCourse:
      type: object
      description: Сериализатор вкладки рекомендации для пользователя.
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        сourse_id:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        pract_id:
          type: array
          items:
            $ref: '#/components/schemas/Pract'
        links_id:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      required:
      - id
      - links_id
      - pract_id
      - user_id
      - сourse_id
    UserCreate:
      type: object
      properties:
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - id
      - password
      - username
    UserLevel:
      type: object
      description: Сериализатор направления пользователя в трекере.
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        level_id:
          $ref: '#/components/schemas/Level'
        skill_id:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
          readOnly: true
        goal:
          type: boolean
          title: Цель
        value:
          type: string
          readOnly: true
      required:
      - id
      - level_id
      - skill_id
      - user_id
      - value
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
      required:
      - new_email
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
